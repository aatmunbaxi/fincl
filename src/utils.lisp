(random-state:define-generator halton 'double-float (random-state:stateful-generator)
    ((index 0 :type (unsigned-byte))
     (n 0)
     (d 1)
     (base 2))
  (:reseed)
  (:next
   (let ((x (- d n)))
     (if (equal x 1)
         (progn (setf n 1)
                (setf d (* d base)))
         (let ((y (floor (/ d base))))
           (loop :while (<= x y)
                 :finally (setf n (- (* y (1+ base)) x))
                 :do
                    (setf y (floor (/ y base))))))
     (/ n d))))
